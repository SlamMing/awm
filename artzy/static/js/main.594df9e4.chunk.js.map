{"version":3,"sources":["logo.svg","lookup/components.js","posts/buttons.js","posts/lookup.js","posts/detail.js","posts/list.js","posts/create.js","posts/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","response","status","onerror","e","console","log","send","ActionButt","props","post","action","didPerformAction","likes","className","actionDisplay","display","type","handleActionBackendEvent","onClick","event","preventDefault","postId","id","apiPostAction","ParentPost","parent","Post","didShare","hideActions","useState","PostAction","setPostAction","match","window","location","pathname","urlPostId","groups","postid","isDetail","handlePerformAction","newPostAction","description","Fragment","is_repost","href","PostsList","postsInit","setPostsInit","posts","setPosts","postsDidSet","setPostsDidSet","useEffect","final","newPosts","concat","username","apiPostsList","handleDidShare","newPost","updatePostsInit","unshift","updateFinalPosts","map","item","index","key","PostCreate","textAreaRef","React","createRef","didPost","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","placeholder","PostsComponent","setNewPosts","canPost","tempNewPosts","PostbyidComponent","didLookup","setDidLookup","setPost","handleBackendLookup","App","src","logo","alt","Boolean","hostname","appEl","getElementById","ReactDOM","render","StrictMode","createElement","postsEl","dataset","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.594df9e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n          const cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  if(csrftoken){\r\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  xhr.onload = function(){\r\n    callback(xhr.response, xhr.status)\r\n      }\r\n  xhr.onerror = function (e) {\r\n    console.log(e)\r\n    callback({\"message\": \"an error occured.\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}\r\n","import React from 'react'\r\nimport {  apiPostAction,} from './lookup'\r\n\r\nexport function ActionButt(props) {\r\n    const {post, action, didPerformAction} = props\r\n    const likes = post.likes ? post.likes : 0\r\n    \r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    const display = action.type === 'like'  ? `${likes} ${actionDisplay}` : actionDisplay\r\n    const handleActionBackendEvent = (response, status)=>{\r\n     //console.log(response, status)\r\n        if ((status === 200 || status === 201) && didPerformAction){\r\n          didPerformAction(response, status)\r\n        }\r\n      \r\n    }\r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      //console.log(action.type)\r\n      apiPostAction(post.id, action.type, handleActionBackendEvent)\r\n     \r\n    }\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n    }","import {backendLookup} from '../lookup'\r\nexport function apiPostCreate(newPost, callback) {\r\n    backendLookup(\"POST\", \"/posts/create/\", callback, {description: newPost})\r\n\r\n}\r\nexport function apiPostAction(postId, action, callback) {\r\n    const data = {id: postId, action:action}\r\n    backendLookup(\"POST\", \"/posts/action/\", callback, data)\r\n\r\n}\r\nexport function apiPostsbyid(postID, callback) {\r\n    backendLookup(\"GET\", `/posts/${postID}/`, callback)\r\n}\r\n\r\nexport function apiPostsList(username, callback) {\r\n    let endpoint =\"/posts/\"\r\n    if (username){\r\n        endpoint = `/posts/?username=${username}`\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n","import React, {useState} from 'react'\r\nimport {ActionButt} from './buttons'\r\n\r\nexport function ParentPost(props){\r\n    const {post} = props\r\n      return post.parent ? <div className='row'>\r\n      <div className='col-11 mx-auto p-3 border rounded'>\r\n      <p className='mb-0 text-muted small'>Shared</p>\r\n       <Post className= {' '} post={post.parent} />\r\n       </div>\r\n       </div> : null \r\n }\r\n\r\nexport function Post(props) {\r\nconst {post, didShare, hideActions} = props\r\nconst [PostAction, setPostAction] = useState(props.post ? props.post : null)\r\nconst className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\nconst path = window.location.pathname\r\nvar match = path.match(/(?<postid>\\d+)/)\r\nvar urlPostId = match ? match.groups.postid : -1\r\nconst isDetail = `${post.id}` === `${urlPostId}`\r\n\r\nconst handleLink = (event) => {\r\n    event.preventDefault()\r\n    window.location.href = `${post.id}`\r\n}\r\n\r\nconst handlePerformAction = (newPostAction, status)=>{\r\n    //console.log(newPostAction)\r\n    if (status === 200){\r\n    setPostAction(newPostAction)\r\n    } else if (status === 201){\r\n    didShare(newPostAction)\r\n    }\r\n}\r\n\r\nreturn <div className={className}>\r\n<div>\r\n<p> {post && post.description } </p>\r\n<ParentPost post={post} />\r\n    </div>  \r\n\r\n<div className='btn btn-group'>\r\n{(PostAction && hideActions !== true) && <React.Fragment>\r\n    <ActionButt post={PostAction} didPerformAction={handlePerformAction} action={{type:\"like\", display:\"Likes\"}}/>\r\n    <ActionButt post={PostAction} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:\"Dislike\"}}/>\r\n    {(post.is_repost!==true) && <ActionButt post={PostAction} didPerformAction={handlePerformAction} action={{type:\"share\", display:\"Share\"}}/>}\r\n    </React.Fragment>\r\n\r\n}\r\n{isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n</div>\r\n</div>\r\n}\r\n    ","import React, {useEffect, useState} from 'react'\r\nimport {apiPostsList} from './lookup'\r\nimport {Post} from './detail'\r\n\r\nexport function PostsList(props){\r\n    const [postsInit, setPostsInit] = useState([])\r\n    const [posts, setPosts] = useState([])\r\n    const [postsDidSet, setPostsDidSet] = useState(false)\r\n  \r\n  \r\n    useEffect(()=> {\r\n      const final = [...props.newPosts].concat(postsInit)\r\n      if (final.length !== posts.length){\r\n        setPosts(final)\r\n      }\r\n    }, [props.newPosts, posts, postsInit]) //dependencies\r\n    useEffect(()=> {\r\n      if(postsDidSet===false){\r\n      const handlePostsListLookup = (response, status) => {\r\n        if (status === 200){\r\n              setPostsInit(response)\r\n              setPostsDidSet(true)\r\n        }\r\n      }\r\n      apiPostsList(props.username, handlePostsListLookup)\r\n    }\r\n    }, [postsDidSet, setPostsDidSet, postsInit, props.username]) //dependencies\r\n    \r\n    const handleDidShare = (newPost)=>{\r\n  \r\n      const updatePostsInit = [...postsInit]\r\n      updatePostsInit.unshift(newPost)\r\n      setPostsInit(updatePostsInit)\r\n  \r\n      const updateFinalPosts = [...posts]\r\n      updateFinalPosts.unshift(newPost)\r\n      setPosts(updateFinalPosts)\r\n    }\r\n  \r\n    return posts.map((item, index)=>{\r\n      return <Post \r\n      didShare={handleDidShare}\r\n      post={item} \r\n      key={`${index}-{item.id}`} \r\n      className='my-5 py-5 border bg-white text-dark' />\r\n    })\r\n  \r\n  }\r\n  ","import React from 'react'\r\nimport {  apiPostCreate} from './lookup'\r\n\r\nexport function PostCreate(props){\r\n  const textAreaRef = React.createRef()\r\n  const {didPost} = props\r\n  const handleBackendUpdate = (response, status)=>{\r\n\r\n    if (status===201){\r\n      didPost(response)\r\n    }else{\r\n      console.log(response)\r\n      alert(\"An error occured sir\")\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newVal = textAreaRef.current.value\r\n    apiPostCreate(newVal, handleBackendUpdate)\r\n    textAreaRef.current.value = ''\r\n  }\r\n\r\n  return <div className={props.className}>\r\n          <form onSubmit={handleSubmit}>\r\n          <textarea ref={textAreaRef} required={true} className='form-control' placeholder='Painting description' name='post'></textarea>\r\n          <button type='submit' className='btn btn-primary my-3'>Publish</button>\r\n          </form>\r\n  </div>\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {PostsList} from './list'\r\nimport {PostCreate} from './create'\r\nimport {Post} from './detail'\r\nimport {apiPostsbyid} from './lookup'\r\n\r\n\r\nexport function PostsComponent(props){\r\n  const [newPosts, setNewPosts] = useState([])\r\n  \r\n  const canPost = props.canPost === \"false\" ? false : true\r\n  const handleNewPost = (newPost)=>{\r\n    let tempNewPosts = [...newPosts]\r\n    tempNewPosts.unshift(newPost)\r\n    setNewPosts(tempNewPosts)\r\n  }\r\n\r\n  return <div className={props.className}>\r\n    {canPost && <PostCreate didPost ={handleNewPost} className='col-12 mb-3'/>}\r\n    <PostsList newPosts={newPosts} {...props} />\r\n    </div>\r\n}\r\n\r\n\r\nexport function PostbyidComponent(props) {\r\n  const {postId} = props\r\n  const [didLookup, setDidLookup] = useState(false) \r\n  const [post, setPost] = useState(null)\r\n  const handleBackendLookup= (response, status) => {\r\n    if(status === 200){\r\n      console.log(\"wew\")\r\n      setPost(response)\r\n    }else {\r\n      alert(\"There was an error finding your post.\")\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if(didLookup === false){\r\n      apiPostsbyid(postId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [postId, didLookup, setDidLookup])\r\n  return post ?  <Post post={post} className={props.className} /> : null\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {PostsComponent} from './posts'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <div>\n        <PostsComponent />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {PostsComponent, PostbyidComponent} from './posts'\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    appEl\n  );\n}\nconst e = React.createElement\nconst postsEl = document.getElementById(\"artzy\")\n\nif (postsEl) {\n  ReactDOM.render(\n    e(PostsComponent, postsEl.dataset),\n    postsEl\n  );\n}\n\nconst postDetailElements = document.querySelectorAll(\".artzy-detail\")\npostDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(PostbyidComponent, container.dataset),\n    container\n  );\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}