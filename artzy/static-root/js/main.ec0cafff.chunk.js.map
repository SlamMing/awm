{"version":3,"sources":["logo.svg","lookup/components.js","posts/lookup.js","posts/buttons.js","profiles/components.js","posts/detail.js","posts/list.js","posts/create.js","posts/feed.js","posts/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","detail","response","console","log","window","location","href","indexOf","onerror","e","send","apiPostsList","username","nextUrl","undefined","replace","apiPostFeed","ActionButt","props","post","action","didPerformAction","likes","className","actionDisplay","display","type","handleActionBackendEvent","onClick","event","preventDefault","postId","id","apiPostAction","AuthorLink","children","AuthorDisplay","author","nameDisplay","includeFullName","first_name","last_name","Fragment","AuthorPicture","ParentPost","parent","Post","isRepost","reposter","hideActions","didShare","useState","PostAction","setPostAction","match","pathname","urlPostId","groups","postid","isDetail","handlePerformAction","newPostAction","classname","description","is_repost","PostsList","postsInit","setPostsInit","posts","setPosts","setNextUrl","postsDidSet","setPostsDidSet","useEffect","final","newPosts","concat","next","results","handleDidShare","newPost","updatePostsInit","unshift","updateFinalPosts","map","item","index","key","PostCreate","textAreaRef","React","createRef","didPost","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","placeholder","FeedList","PostsComponent","setNewPosts","canPost","tempNewPosts","PostbyidComponent","didLookup","setDidLookup","setPost","handleBackendLookup","App","src","logo","alt","Boolean","hostname","appEl","getElementById","ReactDOM","render","StrictMode","createElement","postsEl","dataset","postsFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ec0cafff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n          const cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  if(csrftoken){\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  xhr.onload = function(){\r\n    if (xhr.status === 403){\r\n      const detail = xhr.response.detail\r\n      console.log(detail)\r\n      if(detail === \"Authentication credentials were not provided.\"){\r\n        if(window.location.href.indexOf(\"login\") === -1){\r\n          window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n      }\r\n  xhr.onerror = function (e) {\r\n   \r\n    callback({\"message\": \"an error occured.\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}\r\n","import {backendLookup} from '../lookup'\r\nexport function apiPostCreate(newPost, callback) {\r\n    backendLookup(\"POST\", \"/posts/create/\", callback, {description: newPost})\r\n\r\n}\r\nexport function apiPostAction(postId, action, callback) {\r\n    const data = {id: postId, action:action}\r\n    backendLookup(\"POST\", \"/posts/action/\", callback, data)\r\n\r\n}\r\nexport function apiPostsbyid(postID, callback) {\r\n    backendLookup(\"GET\", `/posts/${postID}/`, callback)\r\n}\r\n\r\nexport function apiPostsList(username, callback, nextUrl) {\r\n    let endpoint =\"/posts/\"\r\n    if (username){\r\n        endpoint = `/posts/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\") // da cambiare in production\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\nexport function apiPostFeed(callback, nextUrl) {\r\n    let endpoint =\"/posts/feed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\") // da cambiare in production\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n","import React from 'react'\r\nimport {  apiPostAction,} from './lookup'\r\n\r\nexport function ActionButt(props) {\r\n    const {post, action, didPerformAction} = props\r\n    const likes = post.likes ? post.likes : 0\r\n    \r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    const display = action.type === 'like'  ? `${likes} ${actionDisplay}` : actionDisplay\r\n    const handleActionBackendEvent = (response, status)=>{\r\n     //console.log(response, status)\r\n        if ((status === 200 || status === 201) && didPerformAction){\r\n          didPerformAction(response, status)\r\n        }\r\n      \r\n    }\r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      //console.log(action.type)\r\n      apiPostAction(post.id, action.type, handleActionBackendEvent)\r\n     \r\n    }\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n    }","import React from 'react'\r\n\r\n\r\nexport function AuthorLink (props){\r\n    const {username} = props\r\n    const handleAuthorLink = (event) => {\r\n        window.location.href = `/profile/${username}`\r\n    }\r\n    return <span className='pointer' onClick={handleAuthorLink}>\r\n            {props.children}\r\n    </span>\r\n}\r\nexport function AuthorDisplay(props) {\r\n    const {author, includeFullName} = props\r\n    const nameDisplay = includeFullName === true ? `${author.first_name} ${author.last_name} ` : null\r\n    return <React.Fragment>\r\n            {nameDisplay} \r\n            <AuthorLink username={author.username}>@{author.username}</AuthorLink>\r\n    </React.Fragment>\r\n}\r\nexport function AuthorPicture (props){\r\n    const {author} = props\r\n    return  <AuthorLink username={author.username}><span className='px-3 py-2 rounded-circle bg-dark text-white'>\r\n        {author.username[0]}  \r\n        </span></AuthorLink>\r\n}","import React, {useState} from 'react'\r\nimport {ActionButt} from './buttons'\r\nimport {AuthorPicture, AuthorDisplay} from '../profiles'\r\n\r\nexport function ParentPost(props){\r\n    const {post} = props\r\n      return post.parent ? \r\n      <Post isRepost reposter={props.reposter} hideActions className= {' '} post={post.parent} /> : null \r\n }\r\n\r\nexport function Post(props) {\r\nconst {post, didShare, hideActions, isRepost, reposter} = props\r\nconst [PostAction, setPostAction] = useState(props.post ? props.post : null)\r\nlet className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\nclassName = isRepost === true ? `${className} p-2 border rounded` : className\r\nconst path = window.location.pathname\r\nvar match = path.match(/(?<postid>\\d+)/)\r\nvar urlPostId = match ? match.groups.postid : -1\r\nconst isDetail = `${post.id}` === `${urlPostId}`\r\n\r\nconst handleLink = (event) => {\r\n    event.preventDefault()\r\n    window.location.href = `${post.id}`\r\n}\r\n\r\nconst handlePerformAction = (newPostAction, status)=>{\r\n    //console.log(newPostAction)\r\n    if (status === 200){\r\n    setPostAction(newPostAction)\r\n    } else if (status === 201){\r\n    didShare(newPostAction)\r\n    }\r\n}\r\n\r\nreturn <div className={className}>\r\n{isRepost === true && <div className='mb-2'> <span classname='small text-muted'>Loved by <AuthorDisplay author={reposter}/></span></div>}\r\n<div className='d-flex'>\r\n    <div className='col-1'>\r\n        <AuthorPicture author={post.author}/>\r\n\r\n    </div>\r\n    <div className='col-11'>\r\n    <AuthorDisplay includeFullName author={post.author}/>\r\n<div>\r\n<p> {post && post.description } </p>\r\n\r\n<ParentPost post={post} reposter={post.author}/>\r\n    </div>  \r\n\r\n<div className='btn btn-group px-0'>\r\n{(PostAction && hideActions !== true) && <React.Fragment>\r\n    <ActionButt post={PostAction} didPerformAction={handlePerformAction} action={{type:\"like\", display:\"Likes\"}}/>\r\n    <ActionButt post={PostAction} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:\"Dislike\"}}/>\r\n    {(post.is_repost!==true) && <ActionButt post={PostAction} didPerformAction={handlePerformAction} action={{type:\"share\", display:\"Love\"}}/>}\r\n    </React.Fragment>\r\n\r\n}\r\n{isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n}\r\n    ","import React, {useEffect, useState} from 'react'\r\nimport {apiPostsList} from './lookup'\r\nimport {Post} from './detail'\r\n\r\nexport function PostsList(props){\r\n    const [postsInit, setPostsInit] = useState([])\r\n    const [posts, setPosts] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [postsDidSet, setPostsDidSet] = useState(false)\r\n  \r\n  \r\n    useEffect(()=> {\r\n      const final = [...props.newPosts].concat(postsInit)\r\n      if (final.length !== posts.length){\r\n        setPosts(final)\r\n      }\r\n    }, [props.newPosts, posts, postsInit]) //dependencies\r\n    useEffect(()=> {\r\n      if(postsDidSet===false){\r\n      const handlePostsListLookup = (response, status) => {\r\n        if (status === 200){\r\n              setNextUrl(response.next)\r\n              setPostsInit(response.results)\r\n              setPostsDidSet(true)\r\n        } \r\n      }\r\n      apiPostsList(props.username, handlePostsListLookup)\r\n    }\r\n    }, [postsDidSet, setPostsDidSet, postsInit, props.username]) //dependencies\r\n    \r\n    const handleDidShare = (newPost)=>{\r\n  \r\n      const updatePostsInit = [...postsInit]\r\n      updatePostsInit.unshift(newPost)\r\n      setPostsInit(updatePostsInit)\r\n  \r\n      const updateFinalPosts = [...posts]\r\n      updateFinalPosts.unshift(newPost)\r\n      setPosts(updateFinalPosts)\r\n    }\r\n    const handleLoadNext = (event)=> {\r\n      event.preventDefault()\r\n      if(nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newPosts = [...posts].concat(response.results)\r\n            setPostsInit(newPosts)\r\n            setPosts(newPosts)\r\n          }\r\n        }\r\n        apiPostsList(props.username, handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n    return <React.Fragment>{posts.map((item, index)=>{\r\n      return <Post \r\n      didShare={handleDidShare}\r\n      post={item} \r\n      key={`${index}-{item.id}`} \r\n      className='my-5 py-5 border bg-white text-dark' />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  \r\n  }\r\n  ","import React from 'react'\r\nimport {  apiPostCreate} from './lookup'\r\n\r\nexport function PostCreate(props){\r\n  const textAreaRef = React.createRef()\r\n  const {didPost} = props\r\n  const handleBackendUpdate = (response, status)=>{\r\n\r\n    if (status===201){\r\n      didPost(response)\r\n    }else{\r\n      alert(\"An error occured sir\")\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newVal = textAreaRef.current.value\r\n    apiPostCreate(newVal, handleBackendUpdate)\r\n    textAreaRef.current.value = ''\r\n  }\r\n\r\n  return <div className={props.className}>\r\n          <form onSubmit={handleSubmit}>\r\n          <textarea ref={textAreaRef} required={true} className='form-control' placeholder='Painting description' name='post'></textarea>\r\n          <button type='submit' className='btn btn-primary my-3'>Publish</button>\r\n          </form>\r\n  </div>\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {apiPostFeed} from './lookup'\r\nimport {Post} from './detail'\r\n\r\nexport function FeedList(props){\r\n    const [postsInit, setPostsInit] = useState([])\r\n    const [posts, setPosts] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [postsDidSet, setPostsDidSet] = useState(false)\r\n  \r\n  \r\n    useEffect(()=> {\r\n      const final = [...props.newPosts].concat(postsInit)\r\n      if (final.length !== posts.length){\r\n        setPosts(final)\r\n      }\r\n    }, [props.newPosts, posts, postsInit]) //dependencies\r\n    useEffect(()=> {\r\n      if(postsDidSet===false){\r\n      const handlePostsListLookup = (response, status) => {\r\n        if (status === 200){\r\n              setNextUrl(response.next)\r\n              setPostsInit(response.results)\r\n              setPostsDidSet(true)\r\n        } \r\n      }\r\n      apiPostFeed(handlePostsListLookup)\r\n    }\r\n    }, [postsDidSet, setPostsDidSet, postsInit, props.username]) //dependencies\r\n    \r\n    const handleDidShare = (newPost)=>{\r\n  \r\n      const updatePostsInit = [...postsInit]\r\n      updatePostsInit.unshift(newPost)\r\n      setPostsInit(updatePostsInit)\r\n  \r\n      const updateFinalPosts = [...posts]\r\n      updateFinalPosts.unshift(newPost)\r\n      setPosts(updateFinalPosts)\r\n    }\r\n    const handleLoadNext = (event)=> {\r\n      event.preventDefault()\r\n      if(nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newPosts = [...posts].concat(response.results)\r\n            setPostsInit(newPosts)\r\n            setPosts(newPosts)\r\n          } \r\n        }\r\n        apiPostFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n    return <React.Fragment>{posts.map((item, index)=>{\r\n      return <Post \r\n      didShare={handleDidShare}\r\n      post={item} \r\n      key={`${index}-{item.id}`} \r\n      className='my-5 py-5 border bg-white text-dark' />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  \r\n  }\r\n  ","import React, {useEffect, useState} from 'react'\r\nimport {PostsList} from './list'\r\nimport {PostCreate} from './create'\r\nimport {Post} from './detail'\r\nimport {FeedList} from './feed'\r\nimport {apiPostsbyid} from './lookup'\r\n\r\n\r\nexport function FeedComponent(props){\r\n  const [newPosts, setNewPosts] = useState([])\r\n  \r\n  const canPost = props.canPost === \"false\" ? false : true\r\n  const handleNewPost = (newPost)=>{\r\n    let tempNewPosts = [...newPosts]\r\n    tempNewPosts.unshift(newPost)\r\n    setNewPosts(tempNewPosts)\r\n  }\r\n\r\n  return <div className={props.className}>\r\n    {canPost === true && <PostCreate didPost ={handleNewPost} className='col-12 mb-3'/>}\r\n    <FeedList newPosts={newPosts} {...props} />\r\n    </div>\r\n}\r\n\r\n\r\nexport function PostsComponent(props){\r\n  const [newPosts, setNewPosts] = useState([])\r\n  \r\n  const canPost = props.canPost === \"false\" ? false : true\r\n  const handleNewPost = (newPost)=>{\r\n    let tempNewPosts = [...newPosts]\r\n    tempNewPosts.unshift(newPost)\r\n    setNewPosts(tempNewPosts)\r\n  }\r\n\r\n  return <div className={props.className}>\r\n    {canPost === true && <PostCreate didPost ={handleNewPost} className='col-12 mb-3'/>}\r\n    <PostsList newPosts={newPosts} {...props} />\r\n    </div>\r\n}\r\n\r\n\r\nexport function PostbyidComponent(props) {\r\n  const {postId} = props\r\n  const [didLookup, setDidLookup] = useState(false) \r\n  const [post, setPost] = useState(null)\r\n  const handleBackendLookup= (response, status) => {\r\n    if(status === 200){\r\n      console.log(\"wew\")\r\n      setPost(response)\r\n    }else {\r\n      alert(\"There was an error finding your post.\")\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if(didLookup === false){\r\n      apiPostsbyid(postId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n }, [postId, didLookup, setDidLookup])\r\n  return post ?  <Post post={post} className={props.className} /> : null\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {PostsComponent} from './posts'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <div>\n        <PostsComponent />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {FeedComponent, PostsComponent, PostbyidComponent} from './posts'\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    appEl\n  );\n}\nconst e = React.createElement\nconst postsEl = document.getElementById(\"artzy\")\n\nif (postsEl) {\n  ReactDOM.render(\n    e(PostsComponent, postsEl.dataset),\n    postsEl\n  );\n}\nconst postsFeedEl = document.getElementById(\"artzy-feed\")\n\nif (postsFeedEl) {\n  ReactDOM.render(\n    e(FeedComponent, postsFeedEl.dataset),\n    postsFeedEl\n  );\n}\n\nconst postDetailElements = document.querySelectorAll(\".artzy-detail\")\npostDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(PostbyidComponent, container.dataset),\n    container\n  );\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}